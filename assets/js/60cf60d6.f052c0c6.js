"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3376],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7692:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],i={sidebar_label:"basic",title:"plugins.cards.card_modules.basic"},l=void 0,s={unversionedId:"api/metaflow/plugins/cards/card_modules/basic",id:"api/metaflow/plugins/cards/card_modules/basic",title:"plugins.cards.card_modules.basic",description:"DefaultComponent Objects",source:"@site/docs/api/metaflow/plugins/cards/card_modules/basic.md",sourceDirName:"api/metaflow/plugins/cards/card_modules",slug:"/api/metaflow/plugins/cards/card_modules/basic",permalink:"/docusaurus/docs/api/metaflow/plugins/cards/card_modules/basic",editUrl:"https://github.com/outerbounds/docusaurus/tree/main/docs/api/metaflow/plugins/cards/card_modules/basic.md",tags:[],version:"current",frontMatter:{sidebar_label:"basic",title:"plugins.cards.card_modules.basic"},sidebar:"apiMetaflow",previous:{title:"tokenizer",permalink:"/docusaurus/docs/api/metaflow/plugins/cards/card_modules/chevron/tokenizer"},next:{title:"card",permalink:"/docusaurus/docs/api/metaflow/plugins/cards/card_modules/card"}},u=[{value:"DefaultComponent Objects",id:"defaultcomponent-objects",children:[],level:2},{value:"TaskInfoComponent Objects",id:"taskinfocomponent-objects",children:[{value:"render",id:"render",children:[],level:4}],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"defaultcomponent-objects"},"DefaultComponent Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class DefaultComponent(MetaflowCardComponent)\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"DefaultCard")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"BlankCard")," use a JS framework that build the HTML dynamically from JSON. The ",(0,o.kt)("inlineCode",{parentName:"p"},"DefaultComponent")," is the base component that helps build the JSON when ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," is called."),(0,o.kt)("p",null,"The underlying JS framewok consists of various types of objects. These can be found in: ",'"',"metaflow/plugins/cards/ui/types.ts",'"',". The ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," attribute in a ",(0,o.kt)("inlineCode",{parentName:"p"},"DefaultComponent")," corresponds to the type of component in the Javascript framework."),(0,o.kt)("h2",{id:"taskinfocomponent-objects"},"TaskInfoComponent Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class TaskInfoComponent(MetaflowCardComponent)\n")),(0,o.kt)("p",null,"Properties\npage_content : a list of MetaflowCardComponents going as task info\nfinal_component: the dictionary returned by the ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," function of this class."),(0,o.kt)("h4",{id:"render"},"render"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"}," | render()\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("p",null,"  a dictionary of form:\ndict(metadata = {},components= [])"))}d.isMDXComponent=!0}}]);