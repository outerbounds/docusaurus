"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7114],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4939:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={sidebar_label:"metaflow_version",title:"metaflow_version"},s=void 0,c={unversionedId:"api/metaflow/metaflow_version",id:"api/metaflow/metaflow_version",title:"metaflow_version",description:"Get version identification for the package",source:"@site/docs/api/metaflow/metaflow_version.md",sourceDirName:"api/metaflow",slug:"/api/metaflow/metaflow_version",permalink:"/docs/api/metaflow/metaflow_version",editUrl:"https://github.dev/outerbounds/docusaurus/blob/main/docs/api/metaflow/metaflow_version.md",tags:[],version:"current",frontMatter:{sidebar_label:"metaflow_version",title:"metaflow_version"},sidebar:"apiMetaflow",previous:{title:"metaflow_environment",permalink:"/docs/api/metaflow/metaflow_environment"},next:{title:"monitor",permalink:"/docs/api/metaflow/monitor"}},u=[{value:"call_git_describe",id:"call_git_describe",children:[],level:4},{value:"format_git_describe",id:"format_git_describe",children:[],level:4},{value:"read_info_version",id:"read_info_version",children:[],level:4},{value:"get_version",id:"get_version",children:[],level:4}],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Get version identification for the package"),(0,i.kt)("p",null,"See the documentation of get_version for more information"),(0,i.kt)("h4",{id:"call_git_describe"},"call","_","git","_","describe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"call_git_describe(abbrev=7)\n")),(0,i.kt)("p",null,"return the string output of git describe"),(0,i.kt)("h4",{id:"format_git_describe"},"format","_","git","_","describe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"format_git_describe(git_str, pep440=False)\n")),(0,i.kt)("p",null,"format the result of calling ","'","git describe","'"," as a python version"),(0,i.kt)("h4",{id:"read_info_version"},"read","_","info","_","version"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"read_info_version()\n")),(0,i.kt)("p",null,"Read version information from INFO file"),(0,i.kt)("h4",{id:"get_version"},"get","_","version"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"get_version(pep440=False)\n")),(0,i.kt)("p",null,"Tracks the version number."),(0,i.kt)("p",null,"pep440: bool\nWhen True, this function returns a version string suitable for\na release as defined by PEP 440. When False, the githash (if\navailable) will be appended to the version string."),(0,i.kt)("p",null,"If the script is located within an active git repository,\ngit-describe is used to get the version information."),(0,i.kt)("p",null,"Otherwise, the version logged by package installer is returned."),(0,i.kt)("p",null,"If even that information isn","'","t available (likely when executing on a\nremote cloud instance), the version information is returned from INFO file\nin the current directory."))}f.isMDXComponent=!0}}]);