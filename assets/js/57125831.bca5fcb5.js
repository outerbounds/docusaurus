"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7934],{3905:function(e,t,o){o.d(t,{Zo:function(){return d},kt:function(){return f}});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=r.createContext({}),s=function(e){var t=r.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},d=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(o),f=n,m=p["".concat(i,".").concat(f)]||p[f]||u[f]||a;return o?r.createElement(m,c(c({ref:t},d),{},{components:o})):r.createElement(m,c({ref:t},d))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,c=new Array(a);c[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var s=2;s<a;s++)c[s]=o[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,o)}p.displayName="MDXCreateElement"},5496:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=o(7462),n=o(3366),a=(o(7294),o(3905)),c=["components"],l={sidebar_label:"conda_flow_decorator",title:"plugins.conda.conda_flow_decorator"},i=void 0,s={unversionedId:"api/metaflow/plugins/conda/conda_flow_decorator",id:"api/metaflow/plugins/conda/conda_flow_decorator",title:"plugins.conda.conda_flow_decorator",description:"CondaFlowDecorator Objects",source:"@site/docs/api/metaflow/plugins/conda/conda_flow_decorator.md",sourceDirName:"api/metaflow/plugins/conda",slug:"/api/metaflow/plugins/conda/conda_flow_decorator",permalink:"/docusaurus/docs/docs/api/metaflow/plugins/conda/conda_flow_decorator",editUrl:"https://github.com/outerbounds/docusaurus/tree/main/docs/api/metaflow/plugins/conda/conda_flow_decorator.md",tags:[],version:"current",frontMatter:{sidebar_label:"conda_flow_decorator",title:"plugins.conda.conda_flow_decorator"},sidebar:"apiMetaflow",previous:{title:"exception",permalink:"/docusaurus/docs/docs/api/metaflow/plugins/cards/exception"},next:{title:"conda_step_decorator",permalink:"/docusaurus/docs/docs/api/metaflow/plugins/conda/conda_step_decorator"}},d=[{value:"CondaFlowDecorator Objects",id:"condaflowdecorator-objects",children:[],level:2},{value:"Parameters",id:"parameters",children:[],level:2},{value:"Raises",id:"raises",children:[],level:2}],u={toc:d};function p(e){var t=e.components,o=(0,n.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"condaflowdecorator-objects"},"CondaFlowDecorator Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class CondaFlowDecorator(FlowDecorator)\n")),(0,a.kt)("p",null,"Conda decorator that sets a default Conda step decorator for all\nsteps in the flow."),(0,a.kt)("p",null,"To use, add this decorator directly on top of your Flow class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"@conda_base\nclass MyFlow(FlowSpec):\n    ...\n")),(0,a.kt)("p",null,"Any step level Conda decorator will override any setting by this decorator."),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"libraries : Dict\nLibraries to use for this flow. The key is the name of the package and the value\nis the version to use. Defaults to {}\npython : string\nVersion of Python to use (for example: ","'","3.7.4","'","). Defaults to None\n(specified at the step level)\ndisabled : bool\nIf set to True, disables Conda (note that this is overridden if a step level decorator\nsets to True). Defaults to None (specified at the step level)"),(0,a.kt)("h2",{id:"raises"},"Raises"),(0,a.kt)("p",null,"InvalidEnvironmentException\nRaised if --environment=conda is not specified"))}p.isMDXComponent=!0}}]);