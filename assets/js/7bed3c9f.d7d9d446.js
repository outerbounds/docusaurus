"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7402],{3905:function(e,r,t){t.d(r,{Zo:function(){return i},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=n.createContext({}),s=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},i=function(e){var r=s(e.components);return n.createElement(d.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return t?n.createElement(f,c(c({ref:r},i),{},{components:t})):n.createElement(f,c({ref:r},i))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=p;var l={};for(var d in r)hasOwnProperty.call(r,d)&&(l[d]=r[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8252:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return i},default:function(){return p}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),c=["components"],l={sidebar_label:"card",title:"plugins.cards.card_modules.card"},d=void 0,s={unversionedId:"api/metaflow/plugins/cards/card_modules/card",id:"api/metaflow/plugins/cards/card_modules/card",title:"plugins.cards.card_modules.card",description:"MetaflowCard Objects",source:"@site/docs/api/metaflow/plugins/cards/card_modules/card.md",sourceDirName:"api/metaflow/plugins/cards/card_modules",slug:"/api/metaflow/plugins/cards/card_modules/card",permalink:"/docusaurus/docs/docs/api/metaflow/plugins/cards/card_modules/card",editUrl:"https://github.com/outerbounds/docusaurus/tree/main/docs/api/metaflow/plugins/cards/card_modules/card.md",tags:[],version:"current",frontMatter:{sidebar_label:"card",title:"plugins.cards.card_modules.card"},sidebar:"apiMetaflow",previous:{title:"basic",permalink:"/docusaurus/docs/docs/api/metaflow/plugins/cards/card_modules/basic"},next:{title:"components",permalink:"/docusaurus/docs/docs/api/metaflow/plugins/cards/card_modules/components"}},i=[{value:"MetaflowCard Objects",id:"metaflowcard-objects",children:[{value:"render",id:"render",children:[],level:4}],level:2},{value:"MetaflowCardComponent Objects",id:"metaflowcardcomponent-objects",children:[{value:"render",id:"render-1",children:[],level:4}],level:2}],u={toc:i};function p(e){var r=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"metaflowcard-objects"},"MetaflowCard Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class MetaflowCard(object)\n")),(0,o.kt)("h4",{id:"render"},"render"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"}," | render(task)\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"render")," returns a string."),(0,o.kt)("h2",{id:"metaflowcardcomponent-objects"},"MetaflowCardComponent Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class MetaflowCardComponent(object)\n")),(0,o.kt)("h4",{id:"render-1"},"render"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"}," | render()\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"render")," returns a string or dictionary. This class can be called on the client side to dynamically add components to the ",(0,o.kt)("inlineCode",{parentName:"p"},"MetaflowCard")))}p.isMDXComponent=!0}}]);