"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1540],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),c=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=c(r),d=n,m=f["".concat(u,".").concat(d)]||f[d]||p[d]||a;return r?o.createElement(m,i(i({ref:t},l),{},{components:r})):o.createElement(m,i({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5798:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return l},default:function(){return f}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],s={},u="Roadmap",c={unversionedId:"r/introduction/roadmap",id:"r/introduction/roadmap",title:"Roadmap",description:"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet but we may open-source them later if there is sufficient external interest. These features are listed below.",source:"@site/docs/r/introduction/roadmap.md",sourceDirName:"r/introduction",slug:"/r/introduction/roadmap",permalink:"/docusaurus/docs/r/introduction/roadmap",editUrl:"https://github.com/outerbounds/docusaurus/tree/main/docs/r/introduction/roadmap.md",tags:[],version:"current",frontMatter:{}},l=[{value:"<strong>Support for R Lang</strong>",id:"support-for-r-lang",children:[],level:2},{value:"Support deployments to a production DAG scheduler",id:"support-deployments-to-a-production-dag-scheduler",children:[],level:2},{value:"<strong>Support for hosting models as a micro-service</strong>",id:"support-for-hosting-models-as-a-micro-service",children:[],level:2},{value:"<strong>Metaflow DataFrame</strong>",id:"metaflow-dataframe",children:[],level:2},{value:"<strong>MetaflowBot</strong>",id:"metaflowbot",children:[],level:2}],p={toc:l};function f(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"roadmap"},"Roadmap"),(0,a.kt)("p",null,"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was open-sourced in December 2019. Some features of Metaflow are not available in open-source yet but we may open-source them later if there is sufficient external interest. These features are listed below."),(0,a.kt)("p",null,"Please click the link and comment / thumbs-up the corresponding GitHub issue if you want to see the feature open-sourced."),(0,a.kt)("h2",{id:"support-for-r-lang"},(0,a.kt)("strong",{parentName:"h2"},"Support for R Lang")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=lakPlz8GJcA"},"Metaflow in the R language"),". Provide an idiomatic R API which uses the Python library as the backend ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/1"},"Github issue"),")"),(0,a.kt)("h2",{id:"support-deployments-to-a-production-dag-scheduler"},"Support deployments to a production DAG scheduler"),(0,a.kt)("p",null,"Netflix uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=0R58_tx7azY"},"an internal DAG scheduler")," to orchestrate most modeling and ETL pipelines in production. Metaflow flows can be deployed to the production scheduler with a single command. A similar integration could be provided e.g. for ",(0,a.kt)("a",{parentName:"p",href:"https://aws.amazon.com/step-functions/"},"AWS Step Functions")," ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/2"},"Github issue"),")"),(0,a.kt)("h2",{id:"support-for-hosting-models-as-a-micro-service"},(0,a.kt)("strong",{parentName:"h2"},"Support for hosting models as a micro-service")),(0,a.kt)("p",null,"An easy-to-use Function-as-a-Service -style ",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=sBM5cSBGZS4"},"microservice hosting platform")," for artifacts ","(","e.g. models",")"," produced by Metaflow runs ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/3"},"Github issue"),")"),(0,a.kt)("h2",{id:"metaflow-dataframe"},(0,a.kt)("strong",{parentName:"h2"},"Metaflow DataFrame")),(0,a.kt)("p",null,"Support in-memory processing of large data sets ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/4"},"Github issue",")")),(0,a.kt)("h2",{id:"metaflowbot"},(0,a.kt)("strong",{parentName:"h2"},"MetaflowBot")),(0,a.kt)("p",null,"A Slack bot for Metaflow. Use it to ask questions about past runs ","(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/issues/5"},"Github issue"),")"))}f.isMDXComponent=!0}}]);