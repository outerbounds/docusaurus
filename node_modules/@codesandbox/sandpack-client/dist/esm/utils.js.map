{
  "version": 3,
  "sources": ["../../src/utils.ts"],
  "sourcesContent": ["import type {\n  SandpackBundlerFiles,\n  Dependencies,\n  SandpackErrorMessage,\n  SandpackError,\n  ErrorStackFrame,\n} from \"./types\";\n\nexport function createPackageJSON(\n  dependencies: Dependencies = {},\n  entry = \"/index.js\"\n): string {\n  return JSON.stringify(\n    {\n      name: \"sandpack-project\",\n      main: entry,\n      dependencies,\n    },\n    null,\n    2\n  );\n}\n\nexport function addPackageJSONIfNeeded(\n  files: SandpackBundlerFiles,\n  dependencies?: Dependencies,\n  entry?: string\n): SandpackBundlerFiles {\n  const newFiles = { ...files };\n\n  if (!newFiles[\"/package.json\"]) {\n    if (!dependencies) {\n      throw new Error(\n        \"No dependencies specified, please specify either a package.json or dependencies.\"\n      );\n    }\n\n    if (!entry) {\n      throw new Error(\n        \"Missing 'entry' parameter. Either specify an entry point, or pass in a package.json with the 'main' field set.\"\n      );\n    }\n\n    newFiles[\"/package.json\"] = {\n      code: createPackageJSON(dependencies, entry),\n    };\n  }\n\n  return newFiles;\n}\n\nexport function extractErrorDetails(msg: SandpackErrorMessage): SandpackError {\n  if (msg.title === \"SyntaxError\") {\n    const { title, path, message, line, column } = msg;\n    return { title, path, message, line, column };\n  }\n\n  const relevantStackFrame = getRelevantStackFrame(msg.payload.frames);\n  if (!relevantStackFrame) {\n    return { message: msg.message };\n  }\n\n  const errorInCode = getErrorInOriginalCode(relevantStackFrame);\n  const errorLocation = getErrorLocation(relevantStackFrame);\n  const errorMessage = formatErrorMessage(\n    relevantStackFrame._originalFileName,\n    msg.message,\n    errorLocation,\n    errorInCode\n  );\n\n  return {\n    message: errorMessage,\n    title: msg.title,\n    path: relevantStackFrame._originalFileName,\n    line: relevantStackFrame._originalLineNumber,\n    column: relevantStackFrame._originalColumnNumber,\n  };\n}\n\nfunction getRelevantStackFrame(frames?: ErrorStackFrame[]) {\n  if (!frames) {\n    return;\n  }\n\n  return frames.find((frame) => !!frame._originalFileName);\n}\n\nfunction getErrorLocation(errorFrame: ErrorStackFrame) {\n  return errorFrame\n    ? ` (${errorFrame._originalLineNumber}:${errorFrame._originalColumnNumber})`\n    : ``;\n}\n\nfunction getErrorInOriginalCode(errorFrame: ErrorStackFrame) {\n  const lastScriptLine =\n    errorFrame._originalScriptCode[errorFrame._originalScriptCode.length - 1];\n  const numberOfLineNumberCharacters = lastScriptLine.lineNumber.toString()\n    .length;\n\n  const leadingCharacterOffset = 2;\n  const barSeparatorCharacterOffset = 3;\n  const extraLineLeadingSpaces =\n    leadingCharacterOffset +\n    numberOfLineNumberCharacters +\n    barSeparatorCharacterOffset +\n    errorFrame._originalColumnNumber;\n\n  return errorFrame._originalScriptCode.reduce((result, scriptLine) => {\n    const leadingChar = scriptLine.highlight ? \">\" : \" \";\n    const lineNumber =\n      scriptLine.lineNumber.toString().length === numberOfLineNumberCharacters\n        ? `${scriptLine.lineNumber}`\n        : ` ${scriptLine.lineNumber}`;\n\n    const extraLine = scriptLine.highlight\n      ? \"\\n\" + \" \".repeat(extraLineLeadingSpaces) + \"^\"\n      : \"\";\n\n    return (\n      result + // accumulator\n      \"\\n\" +\n      leadingChar + // > or \" \"\n      \" \" +\n      lineNumber + // line number on equal number of characters\n      \" | \" +\n      scriptLine.content + // code\n      extraLine // line under the highlighed line to show the column index\n    );\n  }, \"\");\n}\n\nfunction formatErrorMessage(\n  filePath: string,\n  message: string,\n  location: string,\n  errorInCode: string\n) {\n  return `${filePath}: ${message}${location}\n${errorInCode}`;\n}\n"],
  "mappings": ";AAQO,2BACL,eAA6B,IAC7B,QAAQ,aACA;AACR,SAAO,KAAK,UACV;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN;AAAA,KAEF,MACA;AAAA;AAIG,gCACL,OACA,cACA,OACsB;AACtB,QAAM,WAAW,KAAK;AAEtB,MAAI,CAAC,SAAS,kBAAkB;AAC9B,QAAI,CAAC,cAAc;AACjB,YAAM,IAAI,MACR;AAAA;AAIJ,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,MACR;AAAA;AAIJ,aAAS,mBAAmB;AAAA,MAC1B,MAAM,kBAAkB,cAAc;AAAA;AAAA;AAI1C,SAAO;AAAA;AAGF,6BAA6B,KAA0C;AAC5E,MAAI,IAAI,UAAU,eAAe;AAC/B,UAAM,EAAE,OAAO,MAAM,SAAS,MAAM,WAAW;AAC/C,WAAO,EAAE,OAAO,MAAM,SAAS,MAAM;AAAA;AAGvC,QAAM,qBAAqB,sBAAsB,IAAI,QAAQ;AAC7D,MAAI,CAAC,oBAAoB;AACvB,WAAO,EAAE,SAAS,IAAI;AAAA;AAGxB,QAAM,cAAc,uBAAuB;AAC3C,QAAM,gBAAgB,iBAAiB;AACvC,QAAM,eAAe,mBACnB,mBAAmB,mBACnB,IAAI,SACJ,eACA;AAGF,SAAO;AAAA,IACL,SAAS;AAAA,IACT,OAAO,IAAI;AAAA,IACX,MAAM,mBAAmB;AAAA,IACzB,MAAM,mBAAmB;AAAA,IACzB,QAAQ,mBAAmB;AAAA;AAAA;AAI/B,+BAA+B,QAA4B;AACzD,MAAI,CAAC,QAAQ;AACX;AAAA;AAGF,SAAO,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM;AAAA;AAGxC,0BAA0B,YAA6B;AACrD,SAAO,aACH,KAAK,WAAW,uBAAuB,WAAW,2BAClD;AAAA;AAGN,gCAAgC,YAA6B;AAC3D,QAAM,iBACJ,WAAW,oBAAoB,WAAW,oBAAoB,SAAS;AACzE,QAAM,+BAA+B,eAAe,WAAW,WAC5D;AAEH,QAAM,yBAAyB;AAC/B,QAAM,8BAA8B;AACpC,QAAM,yBACJ,yBACA,+BACA,8BACA,WAAW;AAEb,SAAO,WAAW,oBAAoB,OAAO,CAAC,QAAQ,eAAe;AACnE,UAAM,cAAc,WAAW,YAAY,MAAM;AACjD,UAAM,aACJ,WAAW,WAAW,WAAW,WAAW,+BACxC,GAAG,WAAW,eACd,IAAI,WAAW;AAErB,UAAM,YAAY,WAAW,YACzB,OAAO,IAAI,OAAO,0BAA0B,MAC5C;AAEJ,WACE,SACA,OACA,cACA,MACA,aACA,QACA,WAAW,UACX;AAAA,KAED;AAAA;AAGL,4BACE,UACA,SACA,UACA,aACA;AACA,SAAO,GAAG,aAAa,UAAU;AAAA,EACjC;AAAA;",
  "names": []
}
