{"version":3,"file":"use-spring.cjs.production.min.js","sources":["../src/time.ts","../src/config.ts","../src/spring.ts","../src/raf-queue.ts","../src/index.ts"],"sourcesContent":["export function currentTime() {\n  if (typeof window !== \"undefined\") {\n    return performance.now();\n  } else {\n    return 0;\n  }\n}\n","import React from \"react\";\nimport { TaskId } from \"./raf-queue\";\nimport { currentTime } from \"./time\";\n\nexport function useSpringInstance(target: number, config: Config): Instance {\n  const ref = React.useRef<Instance | null>(null);\n  if (ref.current == null) {\n    ref.current = {\n      config: getConfigWithDefaults(target, config),\n      state: getInitialState(target, config)\n    };\n  }\n  return ref.current!;\n}\n\nexport function getConfigWithDefaults(\n  target: number,\n  { stiffness, damping, mass, decimals, teleport }: Config\n): InstanceConfig {\n  return {\n    X: target,\n    k: stiffness ?? 170,\n    c: damping ?? 26,\n    m: mass ?? 1,\n    teleport: teleport ?? false,\n    decimals: decimals ?? 2\n  };\n}\n\nfunction getInitialState(target: number, { from, initialSpeed }: Config) {\n  return {\n    x0: from ?? target,\n    v0: initialSpeed ?? 0,\n    t0: currentTime(),\n    raf: null\n  };\n}\n\nexport type Config = {\n  stiffness?: number;\n  damping?: number;\n  mass?: number;\n  decimals?: number;\n  teleport?: boolean;\n  initialSpeed?: number;\n  from?: number;\n};\n\ntype Instance = {\n  config: InstanceConfig;\n  state: InstanceState;\n};\n\nexport type InstanceConfig = {\n  X: number;\n  k: number;\n  c: number;\n  m: number;\n  teleport: boolean;\n  decimals: number;\n};\n\ntype InstanceState = {\n  x0: number;\n  v0: number;\n  t0: number;\n  raf: TaskId | null;\n};\n","const { sqrt, exp, sin, cos } = Math;\n\nexport function spring({ x0, v0, t0, t, k, c, m, X }: Input): Output {\n  const dx = x0 - X;\n  const dt = (t - t0) / 1000;\n  const radicand = c * c - 4 * k * m;\n  if (radicand > 0) {\n    const rp = (-c + sqrt(radicand)) / (2 * m);\n    const rn = (-c - sqrt(radicand)) / (2 * m);\n    const a = (dx * rp - v0) / (rp - rn);\n    const b = (v0 - dx * rn) / (rp - rn);\n    return {\n      x: X + a * exp(rn * dt) + b * exp(rp * dt),\n      v: a * rn * exp(rn * dt) + b * rp * exp(rp * dt)\n    };\n  } else if (radicand < 0) {\n    const r = -c / (2 * m);\n    const s = sqrt(-radicand) / (2 * m);\n    const a = dx;\n    const b = (v0 - r * dx) / s;\n    return {\n      x: X + exp(r * dt) * (a * cos(s * dt) + b * sin(s * dt)),\n      v:\n        exp(r * dt) *\n        ((b * s + a * r) * cos(s * dt) - (a * s - b * r) * sin(s * dt))\n    };\n  } else {\n    const r = -c / (2 * m);\n    const a = dx;\n    const b = v0 - r * dx;\n    return {\n      x: X + (a + b * dt) * exp(r * dt),\n      v: (b + a * r + b * r * dt) * exp(r * dt)\n    };\n  }\n}\n\ntype Input = {\n  x0: number;\n  v0: number;\n  t0: number;\n  t: number;\n  k: number;\n  c: number;\n  m: number;\n  X: number;\n};\n\ntype Output = {\n  x: number;\n  v: number;\n};\n","import { unstable_batchedUpdates } from \"react-dom\";\nimport { currentTime } from \"./time\";\n\ntype FrameId = number;\ntype TaskIndex = number;\nexport type TaskId = [FrameId, TaskIndex];\ntype TaskFn = (now: number) => any;\n\nlet nextFrameQueue: TaskFn[] = [];\nlet nextFrameId: FrameId | null = null;\n\nexport function queueAnimationFrame(fn: TaskFn): TaskId {\n  const length = nextFrameQueue.push(fn);\n  if (length === 1) {\n    nextFrameId = requestAnimationFrame(runQueue);\n  }\n  return [nextFrameId!, length - 1];\n}\n\nexport function unqueueAnimationFrame([frameId, index]: TaskId) {\n  if (frameId === nextFrameId) {\n    delete nextFrameQueue[index];\n  }\n}\n\nfunction runQueue() {\n  const now = currentTime();\n  const queue = nextFrameQueue;\n  nextFrameQueue = [];\n  unstable_batchedUpdates(() => queue.forEach(task => task && task(now)));\n}\n","import React from \"react\";\nimport {\n  getConfigWithDefaults,\n  useSpringInstance,\n  Config,\n  InstanceConfig\n} from \"./config\";\nimport { spring } from \"./spring\";\nimport { queueAnimationFrame, unqueueAnimationFrame } from \"./raf-queue\";\nimport { currentTime } from \"./time\";\n\n// https://github.com/facebook/react/issues/14927\nconst useLayoutEffect =\n  typeof window !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\n\nexport function useSpring(\n  target: number,\n  config: Config = {}\n): [number, boolean] {\n  const [, forceUpdate] = React.useState();\n  const newConfig = getConfigWithDefaults(target, config);\n  const { state, config: oldConfig } = useSpringInstance(target, config);\n\n  // TODO all springs should use the same t in the same frame\n  const t = currentTime();\n  const { x0, v0, t0 } = state;\n  const { k, c, m, X } = oldConfig;\n  const { x, v } = newConfig.teleport\n    ? { x: X, v: 0 }\n    : spring({ x0, v0, t0, t, k, c, m, X });\n  const moving = isMoving(x, v, t, newConfig);\n\n  useLayoutEffect(() => {\n    Object.assign(oldConfig, newConfig);\n  }, [newConfig.X, newConfig.k, newConfig.c, newConfig.m, newConfig.teleport]);\n\n  useLayoutEffect(() => {\n    state.x0 = x;\n    state.v0 = v;\n    state.t0 = t;\n  }, [x, v, t]);\n\n  useLayoutEffect(() => {\n    const loop = (now: number) => {\n      const { x0, v0, t0 } = state;\n      const { k, c, m, X, decimals } = oldConfig;\n      const { x: nextX } = spring({ x0, v0, t0, t: now, k, c, m, X });\n      if (roundTo(nextX, decimals) !== roundTo(x0, decimals)) {\n        state.raf = null;\n        forceUpdate(now);\n      } else {\n        state.raf = queueAnimationFrame(loop);\n      }\n    };\n    if (moving && state.raf == null) {\n      state.raf = queueAnimationFrame(loop);\n    } else if (!moving && state.raf != null) {\n      unqueueAnimationFrame(state.raf);\n      state.raf = null;\n    }\n  });\n\n  useLayoutEffect(() => {\n    return () => {\n      if (state.raf != null) {\n        unqueueAnimationFrame(state.raf);\n      }\n    };\n  }, []);\n\n  return [roundTo(x, newConfig.decimals), moving];\n}\n\nfunction isMoving(\n  x: number,\n  v: number,\n  t: number,\n  { decimals, X, k, c, m }: InstanceConfig\n) {\n  if (roundTo(x, decimals) !== roundTo(X, decimals)) {\n    return true;\n  }\n\n  const nextT = t + 0.016;\n  const { x: nextX } = spring({ x0: x, v0: v, t0: t, t: nextT, k, c, m, X });\n  return roundTo(nextX, decimals) !== roundTo(X, decimals);\n}\n\nfunction roundTo(x: number, decimals: number) {\n  const p = Math.pow(10, decimals);\n  return Math.round(x * p) / p;\n}\n"],"names":["currentTime","window","performance","now","getConfigWithDefaults","target","stiffness","damping","mass","decimals","teleport","X","k","c","m","getInitialState","from","initialSpeed","x0","v0","t0","raf","sqrt","Math","exp","sin","cos","spring","dx","dt","t","radicand","rp","rn","a","b","x","v","r","s","nextFrameQueue","nextFrameId","queueAnimationFrame","fn","length","push","requestAnimationFrame","runQueue","unqueueAnimationFrame","queue","unstable_batchedUpdates","forEach","task","useLayoutEffect","React","useEffect","roundTo","p","pow","round","config","forceUpdate","useState","newConfig","ref","useRef","current","state","useSpringInstance","oldConfig","moving","isMoving","Object","assign","loop"],"mappings":"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"}