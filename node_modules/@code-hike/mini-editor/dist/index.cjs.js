'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var miniFrame = require('@code-hike/mini-frame');
var classer = require('@code-hike/classer');
var utils = require('@code-hike/utils');
var miniTerminal = require('@code-hike/mini-terminal');
var smoothCode = require('@code-hike/smooth-code');
var useSpring = require('use-spring');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

var EditorFrame = React__default['default'].forwardRef(function InnerEditorFrame(_a, ref) {
    var _b;
    var northPanel = _a.northPanel, southPanel = _a.southPanel; _a.terminalPanel; var style = _a.style; _a.height; var button = _a.button, theme = _a.theme; _a.className; var onTabClick = _a.onTabClick, rest = __rest(_a, ["northPanel", "southPanel", "terminalPanel", "style", "height", "button", "theme", "className", "onTabClick"]);
    classer.useClasser("ch-editor");
    return (React__default['default'].createElement("div", __assign({ ref: ref }, rest, { className: "ch-editor-frame", style: __assign({ background: utils.getColor(theme, utils.ColorName.EditorGroupHeaderBackground) }, style) }),
        React__default['default'].createElement("div", { className: "ch-frame-title-bar" },
            React__default['default'].createElement(TabsContainer, { tabs: northPanel.tabs, showFrameButtons: true, button: button, panel: "north", theme: theme, onTabClick: onTabClick })),
        React__default['default'].createElement("div", { "data-ch-panel": "north", style: northPanel.style, children: northPanel.children }),
        southPanel && (React__default['default'].createElement(React__default['default'].Fragment, null,
            React__default['default'].createElement("div", { className: "ch-frame-title-bar", style: {
                    transform: (_b = southPanel.style) === null || _b === void 0 ? void 0 : _b.transform,
                } },
                React__default['default'].createElement(TabsContainer, { tabs: southPanel.tabs, showFrameButtons: false, topBorder: true, panel: "south", theme: theme, onTabClick: onTabClick })),
            React__default['default'].createElement("div", { "data-ch-panel": "south", children: southPanel.children, style: southPanel.style })))));
});
function TabsContainer(_a) {
    var tabs = _a.tabs, button = _a.button, showFrameButtons = _a.showFrameButtons, topBorder = _a.topBorder, panel = _a.panel, theme = _a.theme, onTabClick = _a.onTabClick;
    var c = classer.useClasser("ch-editor-tab");
    return (React__default['default'].createElement(React__default['default'].Fragment, null,
        topBorder && (React__default['default'].createElement("div", { style: {
                position: "absolute",
                height: "1px",
                background: utils.getColor(theme, utils.ColorName.EditorGroupBorder),
                width: "100%",
                top: 0,
                zIndex: 1,
            } })),
        showFrameButtons ? React__default['default'].createElement(miniFrame.FrameButtons, null) : React__default['default'].createElement("div", null),
        tabs.map(function (_a) {
            var title = _a.title, active = _a.active, style = _a.style;
            return (React__default['default'].createElement("div", { key: title, title: title, "data-ch-tab": panel, className: c("", active ? "active" : "inactive"), style: __assign(__assign({}, style), { background: utils.getColor(theme, active
                        ? utils.ColorName.ActiveTabBackground
                        : utils.ColorName.InactiveTabBackground), color: utils.getColor(theme, active
                        ? utils.ColorName.ActiveTabForeground
                        : utils.ColorName.InactiveTabForeground), borderRightColor: utils.getColor(theme, utils.ColorName.TabBorder), borderBottomColor: utils.getColor(theme, active
                        ? utils.ColorName.ActiveTabBottomBorder
                        : utils.ColorName.InactiveTabBackground) }), onClick: onTabClick && (function () { return onTabClick(title); }) },
                React__default['default'].createElement("div", null, title)));
        }),
        React__default['default'].createElement("div", { style: { flex: 1 } }),
        button));
}

function TerminalPanel(_a) {
    var prev = _a.prev, next = _a.next, t = _a.t, backward = _a.backward;
    var height = getHeight({ prev: prev, next: next, t: t, backward: backward });
    return !height ? null : (React__default['default'].createElement("div", { className: "ch-editor-terminal", style: { height: height } },
        React__default['default'].createElement("div", { className: "ch-editor-terminal-tab" },
            React__default['default'].createElement("span", null, "Terminal")),
        React__default['default'].createElement("div", { className: "ch-editor-terminal-content" },
            React__default['default'].createElement(miniTerminal.InnerTerminal, { steps: [
                    { text: prev || "" },
                    { text: next || "" },
                ], progress: t }),
            ")")));
}
function getHeight(_a) {
    var prev = _a.prev, next = _a.next, t = _a.t; _a.backward;
    if (!prev && !next)
        return 0;
    if (!prev && next)
        return MAX_HEIGHT * Math.min(t * 4, 1);
    if (prev && !next)
        return MAX_HEIGHT * Math.max(1 - t * 4, 0);
    return MAX_HEIGHT;
}
var MAX_HEIGHT = 150;

function useTransition(ref, prev, next, t, backward, codeConfig) {
    // prevSnapshot has the dimensions of the editor for t=0
    // nextSnapshot has the dimensions of the editor for t=1
    var _a = useSnapshots(ref, prev, next), prevSnapshot = _a.prevSnapshot, nextSnapshot = _a.nextSnapshot;
    // we return the default styles for t=0 until we measure the dimensions
    if (!prevSnapshot) {
        return startingPosition(prev, next, codeConfig);
    }
    // and the same for t=1
    if (!nextSnapshot) {
        return endingPosition(prev, next, codeConfig);
    }
    // TODO this should be commented
    // if (t === 0) {
    //   return startingPosition(prev, next, codeConfig)
    // }
    if (t === 1) {
        return endingPosition(prev, next, codeConfig);
    }
    var inputSouthPanel = prev.southPanel || next.southPanel;
    var _b = getStepFiles(prev, next, t == 0 || backward), prevNorthFile = _b.prevNorthFile, prevSouthFile = _b.prevSouthFile, nextNorthFile = _b.nextNorthFile, nextSouthFile = _b.nextSouthFile;
    var _c = getPanelStyles(prevSnapshot, nextSnapshot, t), northStyle = _c.northStyle, southStyle = _c.southStyle;
    var _d = getTabs(prevSnapshot, nextSnapshot, prevNorthFile.name, prevSouthFile === null || prevSouthFile === void 0 ? void 0 : prevSouthFile.name, t), northTabs = _d.northTabs, southTabs = _d.southTabs;
    return {
        northPanel: {
            tabs: northTabs,
            style: northStyle,
            children: (React__default['default'].createElement(CodeTransition, { codeConfig: codeConfig, prevFile: prevNorthFile, nextFile: nextNorthFile, t: t, parentHeight: (northStyle.height ||
                    northStyle.minHeight) })),
        },
        southPanel: inputSouthPanel && {
            tabs: southTabs,
            style: southStyle,
            children: (React__default['default'].createElement(CodeTransition, { codeConfig: codeConfig, prevFile: prevSouthFile, nextFile: nextSouthFile, t: t, parentHeight: ((southStyle === null || southStyle === void 0 ? void 0 : southStyle.height) || (southStyle === null || southStyle === void 0 ? void 0 : southStyle.minHeight)) })),
        },
    };
}
// Returns the t=0 state of the transition
function startingPosition(prev, next, codeConfig) {
    var inputNorthPanel = prev.northPanel;
    var inputSouthPanel = prev.southPanel;
    var _a = getStepFiles(prev, next, true), prevNorthFile = _a.prevNorthFile, prevSouthFile = _a.prevSouthFile; _a.nextNorthFile; _a.nextSouthFile;
    return {
        northPanel: {
            tabs: inputNorthPanel.tabs.map(function (title) { return ({
                title: title,
                active: title === inputNorthPanel.active,
                style: {},
            }); }),
            style: {
                flexGrow: 1,
                overflow: "hidden",
            },
            children: (React__default['default'].createElement(CodeTransition, { codeConfig: codeConfig, prevFile: prevNorthFile, nextFile: prevNorthFile, t: 0, parentHeight: "0" })),
        },
        southPanel: inputSouthPanel && {
            tabs: inputSouthPanel.tabs.map(function (title) { return ({
                title: title,
                active: title === inputSouthPanel.active,
                style: {},
            }); }),
            style: {
                flexGrow: 1,
                overflow: "hidden",
            },
            children: (React__default['default'].createElement(CodeTransition, { codeConfig: codeConfig, prevFile: prevSouthFile, nextFile: prevSouthFile, t: 0, parentHeight: "0" })),
        },
    };
}
// Returns the t=1 state of the transition
function endingPosition(prev, next, codeConfig) {
    var _a;
    var inputNorthPanel = next.northPanel;
    var inputSouthPanel = next.southPanel;
    var _b = getStepFiles(prev, next, false); _b.prevNorthFile; _b.prevSouthFile; var nextNorthFile = _b.nextNorthFile, nextSouthFile = _b.nextSouthFile;
    // getStepFiles return the intermediate files, we need to patch the ending state (2to1south)
    var isTwoToOneSouth = !inputSouthPanel &&
        inputNorthPanel.active === ((_a = prev === null || prev === void 0 ? void 0 : prev.southPanel) === null || _a === void 0 ? void 0 : _a.active);
    if (isTwoToOneSouth) {
        nextNorthFile = nextSouthFile;
    }
    return {
        northPanel: {
            tabs: inputNorthPanel.tabs.map(function (title) { return ({
                title: title,
                active: title === inputNorthPanel.active,
                style: {},
            }); }),
            style: {
                flexGrow: 1,
                overflow: "hidden",
            },
            children: (React__default['default'].createElement(CodeTransition, { codeConfig: codeConfig, prevFile: nextNorthFile, nextFile: nextNorthFile, t: 1, parentHeight: "1" })),
        },
        southPanel: inputSouthPanel && {
            tabs: inputSouthPanel.tabs.map(function (title) { return ({
                title: title,
                active: title === inputSouthPanel.active,
                style: {},
            }); }),
            style: {
                flexGrow: 1,
                overflow: "hidden",
            },
            children: (React__default['default'].createElement(CodeTransition, { codeConfig: codeConfig, prevFile: nextSouthFile, nextFile: nextSouthFile, t: 1, parentHeight: "1" })),
        },
    };
}
function CodeTransition(_a) {
    var _b;
    var prevFile = _a.prevFile, nextFile = _a.nextFile, t = _a.t, codeConfig = _a.codeConfig, parentHeight = _a.parentHeight;
    var htmlProps = __assign(__assign({}, codeConfig === null || codeConfig === void 0 ? void 0 : codeConfig.htmlProps), { style: __assign({ height: "100%" }, (_b = codeConfig === null || codeConfig === void 0 ? void 0 : codeConfig.htmlProps) === null || _b === void 0 ? void 0 : _b.style) });
    return (React__default['default'].createElement(smoothCode.CodeTween, __assign({ progress: t, tween: { prev: prevFile, next: nextFile }, config: __assign(__assign({}, codeConfig), { parentHeight: parentHeight }) }, htmlProps)));
}
/**
 * Get the StepFiles for a transition
 * in each panel, if the prev and next active files are the same
 * we return the prev and next version of that panel
 * if the active files are different, we return the same file twice,
 * if backward is true we return the prev active file twice,
 * or else the next active file twice
 */
function getStepFiles(prev, next, backward) {
    var _a, _b;
    // The active file in each panel before and after:
    // +----+----+
    // | pn | nn |
    // +----+----+
    // | ps | ns |
    // +----+----+
    //
    var pn = prev.northPanel.active;
    var nn = next.northPanel.active;
    var ps = (_a = prev.southPanel) === null || _a === void 0 ? void 0 : _a.active;
    var ns = (_b = next.southPanel) === null || _b === void 0 ? void 0 : _b.active;
    var pnFile = prev.files.find(function (f) { return f.name === pn; });
    var nnFile = next.files.find(function (f) { return f.name === nn; });
    var psFile = ps
        ? prev.files.find(function (f) { return f.name === ps; })
        : null;
    var nsFile = ns
        ? next.files.find(function (f) { return f.name === ns; })
        : null;
    var oneToTwoSouth = !ps && pn === ns;
    if (oneToTwoSouth) {
        return {
            prevNorthFile: nnFile,
            nextNorthFile: nnFile,
            prevSouthFile: pnFile,
            nextSouthFile: nsFile,
        };
    }
    var twoToOneSouth = !ns && nn === ps;
    if (twoToOneSouth) {
        return {
            prevNorthFile: pnFile,
            nextNorthFile: pnFile,
            prevSouthFile: psFile,
            nextSouthFile: nnFile,
        };
    }
    var prevNorthFile = pn === nn ? pnFile : backward ? pnFile : nnFile;
    var nextNorthFile = pn === nn ? nnFile : backward ? pnFile : nnFile;
    var prevSouthFile = ps === ns
        ? psFile
        : backward
            ? psFile || nsFile
            : nsFile || psFile;
    var nextSouthFile = ps === ns
        ? nsFile
        : backward
            ? psFile || nsFile
            : nsFile || psFile;
    return {
        prevNorthFile: prevNorthFile,
        nextNorthFile: nextNorthFile,
        prevSouthFile: prevSouthFile,
        nextSouthFile: nextSouthFile,
    };
}
function getPanelStyles(prev, next, t) {
    // +---+---+
    // | x | x |
    // +---+---+
    // |   |   |
    // +---+---+
    if (prev.southHeight === null &&
        next.southHeight === null) {
        return {
            northStyle: {
                minHeight: prev.northHeight,
            },
        };
    }
    // +---+---+
    // | x | x |
    // +---+---+
    // | y |   |
    // +---+---+
    if (prev.southHeight !== null &&
        next.southHeight === null &&
        next.northKey !== prev.southKey) {
        return {
            northStyle: {
                minHeight: tween(prev.northHeight, next.northHeight, t),
            },
            southStyle: {
                minHeight: prev.southHeight,
            },
        };
    }
    // +---+---+
    // | x | y |
    // +---+---+
    // | y |   |
    // +---+---+
    if (prev.southHeight !== null &&
        next.southHeight === null &&
        prev.southKey === next.northKey) {
        return {
            northStyle: {
                minHeight: prev.northHeight,
            },
            southStyle: {
                position: "relative",
                minHeight: tween(prev.southHeight, next.northHeight, t),
                transform: "translateY(" + tween(0, -(prev.northHeight + prev.titleBarHeight), t) + "px)",
            },
        };
    }
    // +---+---+
    // | x | x |
    // +---+---+
    // |   | y |
    // +---+---+
    if (prev.southHeight === null &&
        next.southHeight !== null &&
        prev.northKey !== next.southKey) {
        return {
            northStyle: {
                minHeight: tween(prev.northHeight, next.northHeight, t),
            },
            southStyle: {
                position: "relative",
                minHeight: next.southHeight,
            },
        };
    }
    // +---+---+
    // | y | x |
    // +---+---+
    // |   | y |
    // +---+---+
    if (prev.southHeight === null &&
        next.southHeight !== null &&
        prev.northKey === next.southKey) {
        return {
            northStyle: {
                minHeight: next.northHeight,
            },
            southStyle: {
                position: "relative",
                minHeight: tween(prev.northHeight, next.southHeight, t),
                transform: "translateY(" + tween(-(next.northHeight + next.titleBarHeight), 0, t) + "px)",
            },
        };
    }
    // +---+---+
    // | x | x |
    // +---+---+
    // | y | y |
    // +---+---+
    return {
        northStyle: {
            minHeight: tween(prev.northHeight, next.northHeight, t),
        },
        southStyle: {
            minHeight: tween(prev.southHeight, next.southHeight, t),
        },
    };
}
function tween(a, b, t) {
    return a + (b - a) * t;
}
function getTabs(prevSnapshot, nextSnapshot, northActive, southActive, t) {
    // TODO simplify
    if (!prevSnapshot.southTabs &&
        isPresent(southActive, prevSnapshot.northTabs)) {
        /// one to two south
        return {
            northTabs: getPanelTabs(nextSnapshot.northTabs, nextSnapshot.southTabs, prevSnapshot.southTabs, prevSnapshot.northTabs, northActive, t),
            southTabs: getPanelTabs(nextSnapshot.southTabs, nextSnapshot.northTabs, prevSnapshot.northTabs, prevSnapshot.southTabs, southActive, t),
        };
    }
    if (!nextSnapshot.southTabs &&
        isPresent(southActive, nextSnapshot.northTabs)) {
        /// two to one south
        return {
            northTabs: getPanelTabs(nextSnapshot.southTabs, nextSnapshot.northTabs, prevSnapshot.northTabs, prevSnapshot.southTabs, northActive, t),
            southTabs: getPanelTabs(nextSnapshot.northTabs, nextSnapshot.southTabs, prevSnapshot.southTabs, prevSnapshot.northTabs, southActive, t),
        };
    }
    return {
        northTabs: getPanelTabs(nextSnapshot.northTabs, nextSnapshot.southTabs, prevSnapshot.northTabs, prevSnapshot.southTabs, northActive, t),
        southTabs: getPanelTabs(nextSnapshot.southTabs, nextSnapshot.northTabs, prevSnapshot.southTabs, prevSnapshot.northTabs, southActive, t),
    };
}
function getPanelTabs(nextSnapshot, otherNextSnapshot, prevSnapshot, otherPrevSnapshot, active, t) {
    // For each tab bar there are four types of tabs
    // - oldTabs: tabs that are present in both prev and next versions of the bar
    // - totallyNewTabs: tabs that are totally new (present in next
    // but not in any prev)
    // - migratingTabs: tabs that are come from the other bar (present
    // in next and in otherPrev)
    // - disappearingTabs: present in prev but not in next or otherNext
    var oldTabs = !nextSnapshot
        ? []
        : Object.keys(nextSnapshot)
            .filter(function (filename) {
            return isPresent(filename, prevSnapshot) ||
                !prevSnapshot;
        })
            .map(function (filename) {
            var prev = prevSnapshot && prevSnapshot[filename];
            var next = nextSnapshot[filename];
            var dx = prev
                ? prev.left + (next.left - prev.left) * t
                : next.left;
            var width = prev
                ? prev.width + (next.width - prev.width) * t
                : next.width;
            return {
                active: filename === active,
                title: filename,
                style: {
                    position: "absolute",
                    transform: "translateX(" + dx + "px)",
                    width: width,
                },
            };
        });
    var totallyNewTabs = !nextSnapshot
        ? []
        : Object.keys(nextSnapshot)
            .filter(function (filename) {
            return prevSnapshot &&
                !isPresent(filename, prevSnapshot);
        }
        // && !isPresent(filename, otherPrevSnapshot)
        )
            .map(function (filename) {
            var next = nextSnapshot[filename];
            return {
                active: filename === active,
                title: filename,
                style: {
                    position: "absolute",
                    transform: "translateX(" + next.left + "px)",
                    opacity: t,
                    width: next.width,
                },
            };
        });
    !nextSnapshot
        ? []
        : Object.keys(nextSnapshot)
            .filter(function (filename) {
            return isPresent(filename, otherPrevSnapshot);
        })
            .map(function (filename) {
            var prev = otherPrevSnapshot[filename];
            var next = nextSnapshot[filename];
            var dx = next.left - prev.left;
            return {
                active: filename === active,
                title: filename,
                style: {
                    position: "absolute",
                    transform: "translateX(" + dx + "px)",
                },
            };
        });
    var disappearingTabs = !prevSnapshot
        ? []
        : Object.keys(prevSnapshot)
            .filter(function (filename) { return !isPresent(filename, nextSnapshot); }
        // && !isPresent(filename, otherNextSnapshot)
        )
            .map(function (filename) {
            var prev = prevSnapshot[filename];
            return {
                active: filename === active,
                title: filename,
                style: {
                    position: "absolute",
                    opacity: 1 - t,
                    transform: "translateX(" + prev.left + "px)",
                    width: prev.width,
                },
            };
        });
    return __spread(totallyNewTabs, oldTabs, disappearingTabs);
}
function isPresent(filename, snapshot) {
    return snapshot && filename && filename in snapshot;
}
// snapshots
var useLayoutEffect$1 = typeof window !== "undefined"
    ? React__default['default'].useLayoutEffect
    : React__default['default'].useEffect;
function useSnapshots(ref, prev, next) {
    var _a = __read(React__default['default'].useState({
        prevSnapshot: null,
        nextSnapshot: null,
    }), 2), _b = _a[0], prevSnapshot = _b.prevSnapshot, nextSnapshot = _b.nextSnapshot, setState = _a[1];
    useLayoutEffect$1(function () {
        if (prevSnapshot || nextSnapshot) {
            setState({
                prevSnapshot: null,
                nextSnapshot: null,
            });
        }
    }, [prev, next]);
    useLayoutEffect$1(function () {
        if (!prevSnapshot) {
            // debugger
            setState(function (s) { return (__assign(__assign({}, s), { prevSnapshot: __assign(__assign({}, getPanelSnapshot(ref.current, prev)), getTabsSnapshot(ref.current, prev)) })); });
        }
        else if (!nextSnapshot) {
            // debugger
            setState(function (s) { return (__assign(__assign({}, s), { nextSnapshot: __assign(__assign({}, getPanelSnapshot(ref.current, next)), getTabsSnapshot(ref.current, next)) })); });
        }
    });
    return { prevSnapshot: prevSnapshot, nextSnapshot: nextSnapshot };
}
function getPanelSnapshot(parent, step) {
    var _a;
    var northElement = parent.querySelector("[data-ch-panel='north']");
    var southElement = parent.querySelector("[data-ch-panel='south']");
    var bar = parent.querySelector(".ch-frame-title-bar");
    return {
        titleBarHeight: bar.getBoundingClientRect().height,
        northHeight: northElement.getBoundingClientRect()
            .height,
        northKey: step.northPanel.active,
        southHeight: (southElement === null || southElement === void 0 ? void 0 : southElement.getBoundingClientRect().height) || null,
        southKey: (_a = step.southPanel) === null || _a === void 0 ? void 0 : _a.active,
    };
}
function getTabsSnapshot(parent, step) {
    var _a;
    var northTabs = Array.from(parent.querySelectorAll("[data-ch-tab='north']"));
    var southTabs = Array.from(parent.querySelectorAll("[data-ch-tab='south']"));
    return {
        northTabs: getTabsDimensions(northTabs, step.northPanel.active),
        southTabs: getTabsDimensions(southTabs, (_a = step.southPanel) === null || _a === void 0 ? void 0 : _a.active),
    };
}
function getTabsDimensions(tabElements, active) {
    if (!tabElements[0]) {
        return null;
    }
    var parent = tabElements[0].parentElement;
    var parentLeft = parent.getBoundingClientRect().left;
    var dimensions = {};
    tabElements.forEach(function (child) {
        var filename = child.getAttribute("title");
        var rect = child.getBoundingClientRect();
        dimensions[filename] = {
            left: rect.left - parentLeft,
            width: rect.width,
            active: filename === active,
        };
    });
    return dimensions;
}

var useLayoutEffect = typeof window !== "undefined"
    ? React__default['default'].useLayoutEffect
    : React__default['default'].useEffect;
var DEFAULT_STEP = {
    files: [
        {
            code: { lines: [], lang: "js" },
            focus: "",
            name: "",
        },
    ],
    northPanel: { active: "", tabs: [""], heightRatio: 1 },
};
function EditorTween(_a) {
    var _b = _a.prev, prev = _b === void 0 ? DEFAULT_STEP : _b, next = _a.next, t = _a.t, backward = _a.backward, codeConfig = _a.codeConfig, _c = _a.frameProps, frameProps = _c === void 0 ? {} : _c, divProps = __rest(_a, ["prev", "next", "t", "backward", "codeConfig", "frameProps"]);
    var ref = React__default['default'].createRef();
    var _d = useTransition(ref, prev, next || prev, t, backward, codeConfig), northPanel = _d.northPanel, southPanel = _d.southPanel;
    var _e = __read(React__default['default'].useState(undefined), 2), frozenHeight = _e[0], freezeHeight = _e[1];
    useLayoutEffect(function () {
        var _a;
        var height = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().height;
        freezeHeight(height);
    }, []);
    var framePropsWithHeight = __assign(__assign(__assign({}, frameProps), divProps), { style: __assign(__assign({}, frameProps === null || frameProps === void 0 ? void 0 : frameProps.style), divProps === null || divProps === void 0 ? void 0 : divProps.style) });
    if (frozenHeight) {
        framePropsWithHeight.style.height = frozenHeight;
        framePropsWithHeight.style.maxHeight = frozenHeight;
    }
    var terminalPanel = (React__default['default'].createElement(TerminalPanel, { prev: prev.terminal, next: (next || prev).terminal, t: t, backward: backward }));
    return (React__default['default'].createElement(EditorFrame, __assign({ ref: ref }, framePropsWithHeight, { northPanel: northPanel, southPanel: southPanel, terminalPanel: terminalPanel, theme: codeConfig.theme })));
}

var defaultSpring = {
    stiffness: 120,
    damping: 24,
    mass: 0.2,
    decimals: 3,
};
function EditorSpring(_a) {
    var northPanel = _a.northPanel, southPanel = _a.southPanel, files = _a.files, terminal = _a.terminal, springConfig = _a.springConfig, props = __rest(_a, ["northPanel", "southPanel", "files", "terminal", "springConfig"]);
    var step = React__default['default'].useMemo(function () {
        return {
            northPanel: northPanel,
            southPanel: southPanel,
            files: files,
            terminal: terminal,
        };
    }, [northPanel, southPanel, files, terminal]);
    var _b = useStepSpring(step, springConfig), prev = _b.prev, next = _b.next, t = _b.t;
    return (React__default['default'].createElement(EditorTween, __assign({ t: t, backward: false, prev: prev, next: next }, props)));
}
function useStepSpring(step, springConfig) {
    if (springConfig === void 0) { springConfig = defaultSpring; }
    var _a = __read(React__default['default'].useState({
        target: 0,
        prev: step,
        next: step,
    }), 2), _b = _a[0], target = _b.target, prev = _b.prev, next = _b.next, setState = _a[1];
    React__default['default'].useEffect(function () {
        if (next != step) {
            setState(function (s) { return ({
                target: s.target + 1,
                prev: next,
                next: step,
            }); });
        }
    }, [step]);
    var _c = __read(useSpring.useSpring(target, springConfig), 1), progress = _c[0];
    var t = progress % 1;
    return { prev: prev, next: next, t: t || 1 };
}

exports.EditorSpring = EditorSpring;
exports.EditorTween = EditorTween;
